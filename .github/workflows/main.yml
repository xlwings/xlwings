name: Build Pipeline

on:
  # Run on all pushed commits, PRs and when a new release is created
  # Prevents duplicate pipeline runs as a release also pushes a tag
  pull_request:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
  release:
    types:
      - created

jobs:
  lint:
    # Prevent duplicate runs for own PRs
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: psf/black@stable
        with:
          options: "--check --diff --color --extend-exclude=xlwings/mistune --target-version=py37"

  build:
    # Prevent duplicate runs for own PRs
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        # pythonnet doesn't have wheels beyond 3.8
        python-version: '3.8'
        architecture: 'x64'
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.100
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: Install Python dependencies
      run: |
        python -m pip install pythonnet
    - name: Install Aspose
      shell: bash
      run: |
        mkdir ./aspose
        curl -L https://www.nuget.org/api/v2/package/Aspose.Cells/17.12.0 -o ./aspose/aspose.cells.nupkg
        unzip ./aspose/aspose.cells.nupkg -d ./aspose/
    - name: Caching dlls
      uses: actions/cache@v2
      id: cache
      with:
        path: |
          xlwings32.dll
          xlwings64.dll
        key: ${{ runner.os }}-${{ hashFiles('src/**') }}
    - name: Build dlls
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        msbuild $Env:GITHUB_WORKSPACE\src\xlwings.sln /p:Configuration=Release -maxcpucount
        msbuild $Env:GITHUB_WORKSPACE\src\xlwings.sln /p:Configuration=Release /p:Platform=x64 -maxcpucount
    - name: Build Python Package
      shell: bash
      env:
        ASPOSE_LICENSE: ${{ secrets.ASPOSE_LICENSE }}
        XLWINGS_LICENSE_KEY_SECRET: ${{ secrets.XLWINGS_LICENSE_KEY_SECRET }}
      run: |
        python ./scripts/build_excel_files.py
        # TODO: change this to use the build package: python -m build
        python setup.py sdist
    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: Package
        path: dist

  test:
    if: github.ref == 'refs/heads/main'
    name: Test installation
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10']
        architecture: ['x64']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
      - name: Install Python dependencies
        run: |
          python -m pip install wheel
      - name: Download artifacts
        uses: actions/download-artifact@v1
        with:
          name: Package
      - name: Test installation
        run: python scripts/ci_test.py

  publish:
    if: github.event_name == 'release'
    name: Publish
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
          architecture: 'x64'
      - name: Install Python dependencies
        run: |
          python -m pip install wheel twine
      - name: Download artifacts
        uses: actions/download-artifact@v1
        with:
          name: Package
      - name: Publish package and update Homepage with release version
        shell: bash
        run: |
          twine upload Package/*.tar.gz
          curl -X POST -d {} https://api.netlify.com/build_hooks/$NETLIFY_BUILD_HOOK
        env:
          NETLIFY_BUILD_HOOK: ${{ secrets.NETLIFY_BUILD_HOOK }}
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
  #          repository_url: https://test.pypi.org/legacy/
      - name: Upload add-in to GH Release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: Package/xlwings.xlam
          asset_name: xlwings.xlam
          asset_content_type: application/zip
