name: Build Pipeline

on:
  # Run on all pushed commits and when a new release is created
  # Prevents duplicated pipeline runs as a release also pushes a tag
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
  release:
    types:
      - created

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.7'
        architecture: 'x64'
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.100
    - name: Install Python dependencies
      run: |
        python -m pip install wheel twine pathlib
        python -m pip install pythonnet
    - name: Install Aspose and build dlls
      run: |
        Invoke-WebRequest -Uri https://www.nuget.org/api/v2/package/Aspose.Cells/17.12.0 -OutFile .\aspose.cells.nupkg
        mkdir .\aspose
        tar -xvzf .\aspose.cells.nupkg -C .\aspose
        cd "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\"
        .\MSBuild.exe $Env:GITHUB_WORKSPACE\src\xlwings.sln /p:Configuration=Release
        .\MSBuild.exe $Env:GITHUB_WORKSPACE\src\xlwings.sln /p:Configuration=Release /p:Platform=x64
    - name: Build Python Package
      shell: bash
      env:
        ASPOSE_LICENSE: ${{ secrets.ASPOSE_LICENSE }}
      run: |
        python ./scripts/build_excel_files.py
        python setup.py sdist
    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: Package
        path: dist
    - name: Publish package and update Homepage with release version
      if: github.event_name == 'release'
      run: |
        twine upload dist/*.tar.gz
        Invoke-RestMethod -Uri https://api.netlify.com/build_hooks/$env:NETLIFY_BUILD_HOOK -Method 'POST' -Body ''
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.pypi_password }}
#          repository_url: https://test.pypi.org/legacy/
    - name: Upload add-in to GH Release
      if: github.event_name == 'release'
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./addin/xlwings.xlam
        asset_name: xlwings.xlam
        asset_content_type: application/zip
